{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateus.rodrigues\\\\Documents\\\\mateus_augusto\\\\fipcar\\\\fipcar_03\\\\frontend\\\\src\\\\components\\\\SeletorLista.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, FormControl, InputLabel, Select, MenuItem, Typography, useTheme } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3001/api';\nconst SeletorLista = ({\n  listaAtiva,\n  onListaChange\n}) => {\n  _s();\n  const [listas, setListas] = useState([]);\n  const theme = useTheme();\n  useEffect(() => {\n    carregarListas();\n  }, []);\n  const carregarListas = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/listas`);\n      setListas(response.data);\n    } catch (error) {\n      console.error('Erro ao carregar listas:', error);\n    }\n  };\n  const handleListaChange = event => {\n    const novaLista = event.target.value;\n    onListaChange(novaLista);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 2,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          fontWeight: 'bold',\n          color: theme.palette.primary.main\n        },\n        children: \"Lista Ativa:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          minWidth: 250\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Selecione uma lista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: listaAtiva || '',\n          onChange: handleListaChange,\n          label: \"Selecione uma lista\",\n          children: listas.map(lista => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: lista.id,\n            children: lista.nome\n          }, lista.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(SeletorLista, \"IV3BXc+lhZrlm1dxvXg2u48ONks=\", false, function () {\n  return [useTheme];\n});\n_c = SeletorLista;\nexport default SeletorLista;\nvar _c;\n$RefreshReg$(_c, \"SeletorLista\");","map":{"version":3,"names":["React","useState","useEffect","Box","FormControl","InputLabel","Select","MenuItem","Typography","useTheme","axios","jsxDEV","_jsxDEV","API_URL","SeletorLista","listaAtiva","onListaChange","_s","listas","setListas","theme","carregarListas","response","get","data","error","console","handleListaChange","event","novaLista","target","value","sx","mb","children","display","alignItems","gap","variant","fontWeight","color","palette","primary","main","fileName","_jsxFileName","lineNumber","columnNumber","minWidth","onChange","label","map","lista","id","nome","_c","$RefreshReg$"],"sources":["C:/Users/mateus.rodrigues/Documents/mateus_augusto/fipcar/fipcar_03/frontend/src/components/SeletorLista.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Typography,\r\n    useTheme\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3001/api';\r\n\r\nconst SeletorLista = ({ listaAtiva, onListaChange }) => {\r\n    const [listas, setListas] = useState([]);\r\n    const theme = useTheme();\r\n\r\n    useEffect(() => {\r\n        carregarListas();\r\n    }, []);\r\n\r\n    const carregarListas = async () => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/listas`);\r\n            setListas(response.data);\r\n        } catch (error) {\r\n            console.error('Erro ao carregar listas:', error);\r\n        }\r\n    };\r\n\r\n    const handleListaChange = (event) => {\r\n        const novaLista = event.target.value;\r\n        onListaChange(novaLista);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ mb: 3 }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\r\n                <Typography variant=\"h6\" sx={{ fontWeight: 'bold', color: theme.palette.primary.main }}>\r\n                    Lista Ativa:\r\n                </Typography>\r\n                <FormControl sx={{ minWidth: 250 }}>\r\n                    <InputLabel>Selecione uma lista</InputLabel>\r\n                    <Select\r\n                        value={listaAtiva || ''}\r\n                        onChange={handleListaChange}\r\n                        label=\"Selecione uma lista\"\r\n                    >\r\n                        {listas.map((lista) => (\r\n                            <MenuItem key={lista.id} value={lista.id}>\r\n                                {lista.nome}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default SeletorLista; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}